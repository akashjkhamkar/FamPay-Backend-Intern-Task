services:
  flask-server:
    container_name: flask-server
    build: ./flask-server
    command: python3 /app/api.py
    restart: always
    volumes:
      - ./flask-server/:/app/
    ports:
      - "8000:8000"
    environment:
      MONGO_USERNAME: admin
      MONGO_PASSWORD: password    
    depends_on:
      - mongodb

  redis:
    container_name: redis
    restart: always
    image: redis:alpine

  celery-worker:
    container_name: celery-worker
    build: ./celery-server
    command: celery -A tasks worker -l debug
    volumes:
      - ./tasks:/tasks/
    restart: always
    environment:
      MONGO_USERNAME: admin
      MONGO_PASSWORD: password
    depends_on:
      - redis

  celery-beat:
    container_name: celery-beat
    build: ./celery-server
    command: celery -A tasks beat -l debug
    volumes:
      - ./tasks/:/tasks/
    restart: always
    environment:
      MONGO_USERNAME: admin
      MONGO_PASSWORD: password
    depends_on:
      - redis

  mongodb:
    container_name: mongodb
    build: './mongodb-server'
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: youtubedb
    ports:
      - "27017:27017"
        
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - "28081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongo://mongoadmin:mongoadmin@mongodb:27017/ 
    depends_on:
      - mongodb